// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users

model Applicant {
  id         String    @id @default(cuid())
  email      String    @unique
  firstName  String
  lastName   String
  picture    String
  skills     Skill[]
  locationId Int?
  location   Location? @relation(fields: [locationId], references: [id])
  jobs       Job[]
  chats      Chat[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Employer {
  id          String    @id @default(cuid())
  email       String    @unique
  firstName   String
  lastName    String
  company     String
  picture     String
  description String
  website     String?
  jobs        Job[]
  industryId  Int?
  industry    Industry? @relation(fields: [industryId], references: [id])
  locationId  Int?
  location    Location? @relation(fields: [locationId], references: [id])
  chats       Chat[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Jobs

model Job {
  id             String      @id @default(cuid())
  title          String?
  description    String?
  salary         String?
  employmentType String?
  international Boolean?
  remote         Boolean?
  requirements   String[]
  contactEmail   String?
  chatId         String?
  skills         Skill[]
  industry       String?
  industry_rel   Industry?   @relation(fields: [industry], references: [name])
  position       String?
  position_rel   Position?   @relation(fields: [position], references: [name])
  employer       String?
  employer_rel   Employer?   @relation(fields: [employer], references: [id])
  location       String?
  location_rel   Location?   @relation(fields: [location], references: [name])
  tags           Tag[]
  applicants     Applicant[]
  published      Boolean?    @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Location {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  employers  Employer[]
  applicants Applicant[]
  jobs       Job[]
}

model Skill {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  jobs      Job[]
  applicant Applicant[]
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  jobs      Job[]
}

model Position {
  id   Int    @id @default(autoincrement())
  name String @unique
  jobs Job[]
}

model Industry {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  jobs      Job[]
  employers Employer[]
}

// Chat

model Chat {
  id          String     @id @default(cuid())
  name        String
  applicantId String?
  applicant   Applicant? @relation(fields: [applicantId], references: [id])
  employerId  String?
  employer    Employer?  @relation(fields: [employerId], references: [id])
  messages    Message[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  content   String
  userId    Int
  sender    String
  receiver  String
  read      Boolean  @default(false)
  chatId    String?
  chat      Chat?    @relation(fields: [chatId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
